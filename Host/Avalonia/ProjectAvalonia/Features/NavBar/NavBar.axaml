<UserControl
    x:Class="ProjectAvalonia.Features.NavBar.NavBar"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:ProjectAvalonia.Behaviors"
    xmlns:c="using:ProjectAvalonia.Common.Controls"
    xmlns:conv="using:ProjectAvalonia.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:ProjectAvalonia.Features.NavBar"
    Name="NavBarUserControl"
    d:DesignHeight="459"
    d:DesignWidth="280"
    x:CompileBindings="True"
    x:DataType="vm:NavBarViewModel"
    UseLayoutRounding="False"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <behaviors:NavBarSelectedIndicatorParentBehavior />
    </i:Interaction.Behaviors>
    <UserControl.Styles>

        <Style Selector="Separator">
            <Setter Property="Background" Value="{DynamicResource AcrylicTrimForeground}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="{DynamicResource MenuFlyoutSeparatorThemePadding}" />
            <Setter Property="Height" Value="{DynamicResource MenuFlyoutSeparatorThemeHeight}" />
        </Style>

        <Style x:DataType="vm:NavBarItemViewModel" Selector="c|NavBarItem">
            <Setter Property="Width" Value="75" />
            <Setter Property="Height" Value="58" />
            <Setter Property="Margin" Value="4 1" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsSelectable" Value="{Binding IsSelectable}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="Command" Value="{Binding OpenCommand}" />
        </Style>

        <Style Selector="c|NavBarItem StackPanel">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Spacing" Value="2" />
        </Style>

        <Style Selector="c|NavBarItem StackPanel TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource FontSizeH9}" />
        </Style>

        <Style x:CompileBindings="False" Selector="c|NavBarItem StackPanel PathIcon">
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource AcrylicTrimForeground}" />
            <Setter Property="Data" Value="{Binding IconName, Converter={x:Static conv:NavBarIconConverter.Instance}}" />
        </Style>

        <Style Selector="c|NavBarItem StackPanel LayoutTransformControl">
            <Setter Property="LayoutTransform" Value="scaleY(1)" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Transitions">
                <Transitions>
                    <TransformOperationsTransition Property="LayoutTransform" Duration="0:0:0.175" />
                    <DoubleTransition
                        Easing="1,0,1,0"
                        Property="Opacity"
                        Duration="0:0:0.175" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="c|NavBarItem:selected StackPanel LayoutTransformControl">
            <Setter Property="LayoutTransform" Value="scaleY(0)" />
            <Setter Property="Opacity" Value="0" />
        </Style>

        <Style x:CompileBindings="False" Selector="c|NavBarItem:selected PathIcon">
            <Setter Property="Data"
                    Value="{Binding IconNameFocused, Converter={x:Static conv:NavBarIconConverter.Instance}}" />
        </Style>

        <Style Selector="c|NavBarItem Ellipse">
            <Setter Property="Fill" Value="{DynamicResource AcrylicTrimForeground}" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Height" Value="8" />
            <Setter Property="Margin" Value="6" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Opacity" Value="0" />
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Fill" Duration="0:0:2" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="c|NavBarItem Ellipse:not(.isLoading).isLoggedIn">
            <Setter Property="Opacity" Value="1" />
        </Style>

        <Style Selector="c|NavBarItem Ellipse.isLoading.isLoggedIn">
            <Style.Animations>
                <Animation IterationCount="Infinite" Duration="0:0:1">
                    <KeyFrame Cue="50%">
                        <Setter Property="Opacity" Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="c|NavBarItem Ellipse.isLoggedIn.isCoinjoining">
            <Setter Property="Fill" Value="{DynamicResource CoinjoinActiveColor}" />
        </Style>

    </UserControl.Styles>

    <DockPanel Margin="0,0,0,5">

        <!--  Bottom items  -->
        <ItemsControl DockPanel.Dock="Bottom" ItemsSource="{Binding BottomItems}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ReversibleStackPanel ReverseOrder="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.DataTemplates>
                <DataTemplate DataType="vm:NavBarItemViewModel">
                    <vm:NavBarItemContainer DataContext="{Binding}" />
                </DataTemplate>
            </ItemsControl.DataTemplates>
        </ItemsControl>

        <!--  Separator  -->
        <Separator DockPanel.Dock="Bottom" />

        <!--  Bottom items  -->
        <ItemsControl ItemsSource="{Binding TopItems}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ReversibleStackPanel ReverseOrder="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.DataTemplates>
                <DataTemplate DataType="vm:NavBarItemViewModel">
                    <vm:NavBarItemContainer DataContext="{Binding}" />
                </DataTemplate>
            </ItemsControl.DataTemplates>
        </ItemsControl>

        <!--  Wallet List  -->
        <!--<ScrollViewer>
            <ItemsControl Items="{Binding Wallets}">
                <ItemsControl.DataTemplates>
                    <DataTemplate DataType="vmw:WalletViewModelBase">
                        <c:NavBarItem ToolTip.Tip="{Binding Title}">
                            <Panel>
                                <Ellipse
                                    Classes.isCoinjoining="{Binding IsCoinJoining}"
                                    Classes.isLoading="{Binding IsLoading}"
                                    Classes.isLoggedIn="{Binding IsLoggedIn}" />
                                <StackPanel>
                                    <PathIcon Classes="new size24" />
                                    <LayoutTransformControl>
                                        <c:FadeOutTextBlock Text="{Binding Title}" />
                                    </LayoutTransformControl>
                                </StackPanel>
                            </Panel>
                        </c:NavBarItem>
                    </DataTemplate>
                </ItemsControl.DataTemplates>
            </ItemsControl>
        </ScrollViewer>-->

    </DockPanel>
</UserControl>