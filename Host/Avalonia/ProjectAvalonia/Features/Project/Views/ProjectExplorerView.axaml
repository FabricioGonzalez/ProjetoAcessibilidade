<UserControl
	x:Class="ProjectAvalonia.Features.Project.Views.ProjectExplorerView"
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behaviors="clr-namespace:ProjectAvalonia.Behaviors"
	xmlns:behaviors1="clr-namespace:ProjectAvalonia.Features.Project.Behaviors"
	xmlns:controls="clr-namespace:ProjectAvalonia.Common.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:designTimeViewModels="clr-namespace:ProjectAvalonia.DesignTimeViewModels"
	xmlns:interfaces="clr-namespace:ProjectAvalonia.Presentation.Interfaces;assembly=ProjectAvalonia.Presentation"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:p="clr-namespace:ProjectAvalonia.Properties"
	xmlns:viewModels="clr-namespace:ProjectAvalonia.Features.Project.ViewModels"
	xmlns:views="clr-namespace:ProjectAvalonia.Features.Project.Views"
	xmlns:vm="clr-namespace:ProjectAvalonia.Features.Project.ViewModels.ExplorerItems;assembly=ProjectAvalonia"
	d:DesignHeight="450"
	d:DesignWidth="800"
	x:DataType="interfaces:IProjectExplorerViewModel"
	mc:Ignorable="d">
	<UserControl.Styles>
		<Style Selector="TreeView.NodesDragAndDrop">
			<Style.Resources>
				<behaviors1:ProjectExplorerItemDNDBehavior x:Key="ProjectExplorerItemDNDBehavior" />
			</Style.Resources>
			<Setter Property="(Interaction.Behaviors)">
				<BehaviorCollectionTemplate>
					<BehaviorCollection>
						<ContextDropBehavior Handler="{StaticResource ProjectExplorerItemDNDBehavior}" />
					</BehaviorCollection>
				</BehaviorCollectionTemplate>
			</Setter>
		</Style>

		<Style Selector="TreeView.NodesDragAndDrop TreeViewItem">
			<Setter Property="IsExpanded" Value="True" />
			<Setter Property="(Interaction.Behaviors)">
				<BehaviorCollectionTemplate>
					<BehaviorCollection>
						<ContextDragBehavior />
						<ContextDropBehavior Handler="{StaticResource ProjectExplorerItemDNDBehavior}" />
					</BehaviorCollection>
				</BehaviorCollectionTemplate>
			</Setter>
		</Style>
	</UserControl.Styles>
	<Design.DataContext>
		<designTimeViewModels:DesignTimeProjectExplorerViewModel />
	</Design.DataContext>
	<Grid Background="{DynamicResource AcrylicTrimBackground}" RowDefinitions="24,16,32,16,1*">
		<TextBlock
			Grid.Row="0"
			Margin="4,0"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Text="{x:Static p:Resources.Solution_Explorer_Label}" />
		<Separator Grid.Row="1" />
		<TextBox
			Grid.Row="2"
			Margin="4,0"
			Watermark="{x:Static p:Resources.Search_Solution_Items_Watermark}">
			<TextBox.InnerRightContent>
				<PathIcon Margin="0,0,4,0" Data="{StaticResource search_regular}" />
			</TextBox.InnerRightContent>
		</TextBox>
		<Separator Grid.Row="3" />
		<TreeView
			Grid.Row="4"
			Margin="4,0"
			Padding="0"
			VerticalAlignment="Stretch"
			Classes="NodesDragAndDrop"
			SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
			<TreeViewItem DataContext="{Binding SolutionRootItem.SolutionItem}" Header="{Binding Name}">
				<Interaction.Behaviors>
					<behaviors:ExecuteCommandOnDoubleTappedBehavior Command="{Binding $parent[views:ProjectView].((viewModels:ProjectViewModel)DataContext).ProjectEditingViewModel.AddItemToEdit}" CommandParameter="{Binding}" />
				</Interaction.Behaviors>
			</TreeViewItem>
			<TreeViewItem DataContext="{Binding SolutionRootItem.ConclusionItem}" Header="{Binding Name}">
				<Interaction.Behaviors>
					<behaviors:ExecuteCommandOnDoubleTappedBehavior Command="{Binding $parent[views:ProjectView].((viewModels:ProjectViewModel)DataContext).ProjectEditingViewModel.AddItemToEdit}" CommandParameter="{Binding}" />
				</Interaction.Behaviors>
			</TreeViewItem>
			<TreeViewItem
				DataContext="{Binding SolutionRootItem}"
				Header="Itens"
				ItemsSource="{Binding LocationItems}">
				<TreeViewItem.DataTemplates>
					<TreeDataTemplate DataType="viewModels:SolutionLocationItemViewModel" ItemsSource="{Binding Items}">
						<StackPanel Orientation="Horizontal" Spacing="2">
							<PathIcon Data="{StaticResource folder_regular}" />
							<controls:EditableTextBlock
								Command="{Binding RenameFolderCommand}"
								CommitCommand="{Binding CommitFolderCommand}"
								EditText="{Binding Name, Mode=TwoWay}"
								InEditMode="{Binding InEditing}"
								Text="{Binding Name, Mode=OneWay}" />
							<StackPanel.ContextMenu>
								<ContextMenu>
									<MenuItem Command="{Binding AddProjectItemCommand}" Header="{x:Static p:Resources.Add_Folder_Item_Menu_Header}" />
									<MenuItem
										Command="{Binding $parent[views:ProjectExplorerView].((vm:ProjectExplorerViewModel)DataContext).RevealOnExplorerCommand}"
										CommandParameter="{Binding ItemPath}"
										Header="{x:Static p:Resources.Open_On_Explorer_Item_Menu_Header}" />
									<MenuItem Command="{Binding AddExistingItemCommand}" Header="{x:Static p:Resources.Add_Existing_Folder_Item_Menu_Header}" />
									<MenuItem Command="{Binding RenameFolderCommand}" Header="{x:Static p:Resources.Rename_Folder_Item_Menu_Header}" />
									<MenuItem Command="{Binding ExcludeFolderCommand}" Header="{x:Static p:Resources.Exclude_Folder_Item_Menu_Header}" />
								</ContextMenu>
							</StackPanel.ContextMenu>
						</StackPanel>
					</TreeDataTemplate>

					<TreeDataTemplate DataType="viewModels:ItemGroupViewModel" ItemsSource="{Binding Items}">
						<StackPanel Orientation="Horizontal" Spacing="2">
							<PathIcon Data="{StaticResource folder_regular}" DockPanel.Dock="Left" />
							<controls:EditableTextBlock
								Command="{Binding RenameFolderCommand}"
								CommitCommand="{Binding CommitFolderCommand}"
								EditText="{Binding Name, Mode=TwoWay}"
								InEditMode="{Binding InEditing}"
								Text="{Binding Name, Mode=OneWay}" />
							<StackPanel.ContextMenu>
								<ContextMenu>
									<MenuItem Command="{Binding AddProjectItemCommand}" Header="{x:Static p:Resources.Add_Folder_Item_Menu_Header}" />
									<MenuItem Command="{Binding AddExistingItemCommand}" Header="{x:Static p:Resources.Add_Existing_Folder_Item_Menu_Header}" />
									<MenuItem
										Command="{Binding $parent[views:ProjectExplorerView].((vm:ProjectExplorerViewModel)DataContext).RevealOnExplorerCommand}"
										CommandParameter="{Binding ItemPath}"
										Header="{x:Static p:Resources.Open_On_Explorer_Item_Menu_Header}" />
									<MenuItem Command="{Binding RenameFolderCommand}" Header="{x:Static p:Resources.Rename_Folder_Item_Menu_Header}" />
									<MenuItem Command="{Binding ExcludeFolderCommand}" Header="{x:Static p:Resources.Exclude_Folder_Item_Menu_Header}" />
								</ContextMenu>
							</StackPanel.ContextMenu>
						</StackPanel>
					</TreeDataTemplate>

					<DataTemplate DataType="viewModels:ItemViewModel">
						<StackPanel
							Classes="ItemsDragAndDrop"
							DragDrop.AllowDrop="True"
							Orientation="Horizontal"
							Spacing="8">
							<Interaction.Behaviors>
								<behaviors:ExecuteCommandOnDoubleTappedBehavior Command="{Binding $parent[views:ProjectView].((viewModels:ProjectViewModel)DataContext).ProjectEditingViewModel.AddItemToEdit}" CommandParameter="{Binding}" />
							</Interaction.Behaviors>
							<PathIcon HorizontalAlignment="Left" Data="{StaticResource document_regular}" />
							<controls:EditableTextBlock
								Command="{Binding RenameFileCommand}"
								CommandParameter="{Binding Parent}"
								CommitCommand="{Binding CommitFileCommand}"
								EditText="{Binding Name, Mode=TwoWay}"
								InEditMode="{Binding InEditing}"
								Text="{Binding Name, Mode=OneWay}" />
							<StackPanel.ContextMenu>
								<ContextMenu>
									<MenuItem Command="{Binding ExcludeFileCommand}" Header="{x:Static p:Resources.Exclude_File_Item_Menu_Header}" />
									<MenuItem Command="{Binding RenameFileCommand}" Header="{x:Static p:Resources.Rename_File_Item_Menu_Header}" />
								</ContextMenu>
							</StackPanel.ContextMenu>
						</StackPanel>
					</DataTemplate>
				</TreeViewItem.DataTemplates>
			</TreeViewItem>
			<TreeView.ContextMenu>
				<ContextMenu>
					<MenuItem Command="{Binding CreateFolderCommand}" Header="{x:Static p:Resources.Add_Solution_Item_Menu_Item}" />
				</ContextMenu>
			</TreeView.ContextMenu>
		</TreeView>
	</Grid>
</UserControl>